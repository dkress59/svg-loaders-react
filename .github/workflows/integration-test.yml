name: Integration Test CI

on:
    push:
        branches: [master, feature/workflow]
    pull_request:
        branches: [master, feature/workflow]

jobs:
    JavaScript:
        runs-on: ubuntu-latest
        env:
            SLT: 'svg-loaders-tester'
            SLR: 'svg-loaders-react'
            WORKDIR: '/home/runner/work/svg-loaders-react/svg-loaders-react'

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2-beta
              with:
                  node-version: '15'
                  check-latest: true

            - name: Create React App
              run: >-
                  npx create-react-app ${{env.SLT}} &&
                  cd ${{env.SLT}} &&
                  yarn add ${{env.SLR}}

            - name: Update Node Module
              run: >-
                  cd $WORKDIR &&
                  rm -r ${{env.SLT}}/node_modules/${{env.SLR}}/* &&
                  cp -r src dist package.json ${{env.SLT}}/node_modules/${{env.SLR}}

            - name: Build with imported Module
              run: >-
                  cd $WORKDIR &&
                  rm -f ${{env.SLT}}/src/App.js ${{env.SLT}}/src/App.jsx &&
                  cp test/install.test ${{env.SLT}}/src/App.jsx &&
                  cd ${{env.SLT}} &&
                  yarn build

    TypeScript:
        runs-on: ubuntu-latest
        env:
            SLT: 'svg-loaders-tester'
            SLR: 'svg-loaders-react'
            WORKDIR: '/home/runner/work/svg-loaders-react/svg-loaders-react'

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2-beta
              with:
                  node-version: '15'
                  check-latest: true

            - name: Create React App
              run: >-
                  npx create-react-app ${{env.SLT}} --template typescript &&
                  cd ${{env.SLT}} &&
                  yarn add ${{env.SLR}}

            - name: Update Node Module
              run: >-
                  cd $WORKDIR &&
                  rm -r ${{env.SLT}}/node_modules/${{env.SLR}}/* &&
                  cp -r src dist package.json tsconfig.json ${{env.SLT}}/node_modules/${{env.SLR}}

            - name: Build with imported Module
              run: >-
                  cd $WORKDIR &&
                  rm -f ${{env.SLT}}/src/App.ts ${{env.SLT}}/src/App.tsx &&
                  cp test/install.test ${{env.SLT}}/src/App.tsx &&
                  cd ${{env.SLT}} &&
                  yarn build
